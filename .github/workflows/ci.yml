name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm

      - name: Install
        run: pnpm install

      - name: Lint
        run: pnpm run lint

  # typecheck:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: pnpm/action-setup@v2
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16.x
  #         cache: pnpm

  #     - name: Install
  #       run: pnpm install

  #     - name: Typecheck
  #       run: pnpm run typecheck

  # test:
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       node-version: [14.x, 16.x]
  #       os: [ubuntu-latest]
  #     fail-fast: false

  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: pnpm/action-setup@v2
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: https://registry.npmjs.org/
  #         cache: pnpm

  #     - run: pnpm install
  #     - run: pnpm run test:unit

  # test-e2e:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cache
  #         key: cypress-cache-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

  #     - uses: pnpm/action-setup@v2

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         registry-url: https://registry.npmjs.org/
  #         cache: pnpm

  #     - run: pnpm install

  #     - name: Cypress PNPM Patch
  #       run: cp pnpm-lock.yaml package-lock.json

  #     - name: Cypress
  #       uses: cypress-io/github-action@v2
  #       with:
  #         install-command: echo
  #         build: pnpm run build
  #         start: npx vite --port 3333

  deploy-gh-pages:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: pnpm

      - name: Install
        run: pnpm install

      - name: Build
        env:
          VITE_BASE: /sdgo-data
        run: pnpm build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
  
  deploy-netlify:
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.2
        with:
          publish-dir: './dist'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: false
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        timeout-minutes: 1
